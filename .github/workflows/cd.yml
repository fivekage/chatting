name: cd-chatting

on:
  push:
    branches: ["master", "cd"]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GCP_LOCATION }}
  SERVICE: ${{ secrets.GCP_SERVICE }}
  REGION: ${{ secrets.GCP_REGION }}

jobs:
  deploy:
    name: Deploy chatting app to Cloud Run
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: Docker Auth
        id: docker-auth
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_LOCATION }}-docker.pkg.dev

      - name: Create a env file for the chatting app
        run: |
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env

      - name: Build and Push Container
        run: |
          docker build  -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ secrets.GAR_IMAGE }}:${{ github.sha }} ./
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ secrets.GAR_IMAGE }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          flags: "--allow-unauthenticated"
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ secrets.GAR_IMAGE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
